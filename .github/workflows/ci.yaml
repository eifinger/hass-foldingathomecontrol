name: CI

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *"

jobs:
  black:
    name: black
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Check black
        run: |
          black --check .
  pylint:
    name: pylint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint
        run: |
          pylint custom_components
  pytest:
    name: pytest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          python -m pytest
  hacs_validate:
    name: "HACS Validate"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - name: HACS validation
        uses: "hacs/integration/action@main"
        with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            CATEGORY: "integration"
        env:
            SKIP_BRANDS_CHECK: "True"
  hass_validate:
    name: Hassfest
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - name: Hassfest
        uses: home-assistant/actions/hassfest@master
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs:
      - black
      - pylint
      - pytest
      - hacs_validate
      - hass_validate
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v2.1.4
        with:
            node-version: 12.x
      - name: Install semantic release
        run: npm install semantic-release
      - name: Create new release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
